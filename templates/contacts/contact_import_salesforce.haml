-extends "smartmin/form.html"

-load smartmin
-load i18n

- block pjax
  #pjax
    .row
      .span3
        #big-help.glyph.icon-cloud

      .span9
        %p
          -trans "You can import your contacts from Salesforce."

        %p
          -trans "By clicking the button below, your contacts will be imported from Salesforce. Before clicking on import, choose what fields you want to import to Community Connect Labs."

        - block import-status
          #import-status
            #import-message
              - if task
                - if task.status == "PENDING" or task.status == "RUNNING" or task.status == "STARTED"
                  %p
                    Importing..
                    %img{src:"{{ STATIC_URL }}images/loader-circles.gif"}
                

                - else 
                  - if task.status == "SUCCESS" and group.contacts.all
                    - if results.creates
                      .import-result
                        .glyph.icon-checkmark.success
                        -blocktrans count results.creates as create_count
                          Created {{ create_count }} new contact
                          -plural
                            Created {{ create_count }} new contacts

                    - if results.updates
                      .import-result
                        .glyph.icon-checkmark.success
                        -blocktrans count results.updates as update_count
                          Updated {{ update_count }} contact with an existing phone number
                          -plural
                            Updated {{ update_count }} contacts with existing phone numbers

                    .import-result
                      .glyph.icon-checkmark.success
                      -blocktrans with contacts_count=results.records
                        Added all contacts to the new
                      %a{href:"{% url 'contacts.contact_filter' group.uuid %}"}= group.name
                      group

                    - if results.errors
                      .import-result
                        .well.well-small
                          %strong
                            -blocktrans
                              Some rows were not imported
                          %br
                          %strong
                            -blocktrans
                              Errors description
                          %br
                            - for error_message in results.error_messages
                              Row {{ error_message.line }}: {{ error_message.error }}
                              %br

                  - elif results.errors
                    .import-result
                      .glyph.icon-warning.warning
                      -blocktrans count results.errors as error_count
                        Failed to import {{ error_count }} contact due to missing or invalid phone number
                        -plural
                          Failed to import {{ error_count }} contacts due to missing or invalid phone numbers

                    .import-result
                      .well.well-small
                        %strong
                          -blocktrans
                            Errors description

                        %br
                          - for error_message in results.error_messages
                            Row {{ error_message.line }}: {{ error_message.error }}
                            %br

                  - elif task.status == "SUCCESS" and not group.contacts.all
                    %p
                      Grouping..
                      %img{src:"{{ STATIC_URL }}images/loader-circles.gif"}

                  - elif not group.contacts.all
                    %p
                      -blocktrans
                        No contacts imported, please make sure your have a channel connected.

            - if show_form and salesforce_connect
              %p

                %form#import-form.smartmin-form.horizontal-form{method:"post", action:"{% url 'contacts.contact_import_salesforce' %}", enctype:"multipart/form-data"}
                  - if form.non_field_errors
                    .alert.alert-error.form-errors
                      {{ form.non_field_errors }}
                  
                  -csrf_token

                  -block fields
                    #salesforce_fields_errors
                      {{ form.salesforce_fields.errors }}
                    #salesforce_fields
                      %input{type:"text", id:"salesforce-fields", name: "salesforce-fields"}

                    %p
                      %a#advancedOptionsButton{href: 'javascript:;', onclick: 'showAndHideAdvancedOptions()'}
                        -trans "Advanced options"

                    #salesforce_query_fields.active
                      
                      %p
                        -trans "Select the fields and the query, to import only contacts that match these requirements."

                      .templates
                        .salesforce-header-pair.hide
                          .field.header-field.field-select2
                            %input{type: 'text', id: 'header_0_field', name: 'header_0_field', select2: ''}
                          .field.header-rule
                            %select{id: 'header_0_rule', name: 'header_0_rule'}
                              %option{value: "Test"} Test
                          .field.header-value
                            %input{type: 'text', id: 'header_0_value', name: 'header_0_value'}
                  
                      #real-fields
                        .salesforce-header-pair
                          .field.header-field
                            %label
                              -trans "Field"
                          .field.header-rule
                            %label
                              -trans "Rule"
                          .field.header-value
                            %label
                              -trans "Value"
                      %a.add-query{href: 'javascript:;', onclick: 'addNewQuery()'}
                        .icon.icon-plus-circle2
                    
                  .form-buttons
                    %input.btn.btn-primary{type:"submit", value:'{% trans "Import" %}'}
                    %a.btn{onclick:"javascript:history.go(-1)"}
                      -trans "Cancel"
            -elif not salesforce_connect
              %p
                %b{style: "color: #F00"}
                  -trans "Your Salesforce isn't connected."


{% block extra-style %}
:css
  .select2-temba-field {
    width: 100%;
  }

  .select2-container-multi {
    width: 520px;
  }

  .form-buttons {
    margin-top: 30px;
  }

  #import-message .import-result {
    padding-bottom: 10px;
    font-size: 20px;
  }

  #import-message .import-result .glyph {
    font-size: 28px;
    margin: 0px 20px;
    line-height: 22px;
  }

  #import-message .import-result .well {
    font-size: 14px;
  }

  #import-message .import-result a {
    text-decoration :none;
  }

  #salesforce_query_fields {
    display: none;
  }

  #salesforce_query_fields.active {
    display: table;
  }

  #salesforce_query_fields .templates {
    display: none;
  }

  #salesforce_query_fields .salesforce-header-pair {
    width: 100%;
  }

  #salesforce_query_fields .field {
    width: 190px;
    position: relative;
    display: inline-block;
  }

  #salesforce_query_fields .field input, #salesforce_query_fields .field select {
    width: 100%;
    box-sizing: border-box;
    height: 35px;
  }

{% endblock %}

{% block extra-script %}
  :javascript

    var salesforceFields = [];
    
    $(document).ready(function() {
      addNewQuery();
      $.ajax("{% url 'flows.flow_salesforce_fields' %}").success(function(data) {
        $('#salesforce-fields').select2({
          tags: true,
          tokenSeparators: [",", " "],
          minimumResultsForSearch: -1,
          placeholder: "Salesforce Fields like Name, Email...",
          containerCssClass: "select2-temba-field",
          data: data.results
        });
        $('input[select2]').select2({
          data: data.results,
          containerCssClass: "select2-temba-field"
        });
        salesforceFields = data.results;
      });
    });

    function addNewQuery() {
      var numPairs = $("#real-fields").children(".salesforce-header-pair").length
      var ele = $('.templates > .salesforce-header-pair').clone();

      ele.find('input[id^="header_"]').each(function(){
        var id = $(this).attr('id');
        $(this).attr('id', id.replace(/0/g, numPairs));
        var name = $(this).attr('name');
        console.log(id);
        console.log($(this));
        $(this).attr('name', name.replace(/0/g, numPairs));
      });
      
      $("#real-fields").append(ele);
      ele.toggleClass('hide');

      ele.find('input[id^="header_"]').select2({
        data: salesforceFields,
        containerCssClass: "select2-temba-field"
      });

    }

    function showAndHideAdvancedOptions() {
      var btn = $('#advancedOptionsButton');
      var el = $('#salesforce_query_fields');
      if (el.hasClass('active')) {
        el.removeClass('active');
        btn.html('Advanced options');
      } else {
        el.addClass('active');
        btn.html('Simple options');
      }
    }

{% endblock %}